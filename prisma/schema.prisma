datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  resetTokens   ResetPasswordToken[] // Adicione esta linha
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}

model Customer {
  id               String    @id @default(uuid())
  fullName         String
  email            String
  phone            String
  registrationDate DateTime  @default(now())
  contacts         Contact[] @relation("CustomerContacts")
}

model Contact {
  id         String   @id @default(uuid())
  fullName   String
  email      String
  phone      String
  customerId String
  customer   Customer @relation("CustomerContacts", fields: [customerId], references: [id])
}

model ResetPasswordToken {
  token      String   @id
  userId     String
  expiresAt  DateTime

  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}
